name: test

on: [push, pull_request]

jobs:
  pre-build:
    name: Pre-Build
    runs-on: ubuntu-latest
    outputs:
      rust-version: ${{ steps.rust-version.outputs.rust-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Determine Rust Version
        id: rust-version
        run: |
          rust_version=$(cargo metadata --format-version 1 --no-deps | jq -r '.packages[] | select(.name == "unicode-linebreak-chunked") | .rust_version')
          echo "rust-version=$rust_version" >> "$GITHUB_OUTPUT"

  test:
    needs: pre-build
    name: ${{ format('Build ({0})', matrix.rust-version) }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: ['${{needs.pre-build.outputs.rust-version}}', stable]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          profile: minimal
          override: true

      - name: Configure src/tables.rs cache
        id: cache-tables
        uses: actions/cache@v3
        with:
          path: src/tables.rs
          key: ${{ hashFiles('LineBreak.txt', 'gen-tables/**') }}

      - name: Generates src/tables.rs
        run: cargo run
        working-directory: ./gen-tables
        if: steps.cache-tables.outputs.cache-hit != 'true'

      - name: Run tests
        run: cargo test
